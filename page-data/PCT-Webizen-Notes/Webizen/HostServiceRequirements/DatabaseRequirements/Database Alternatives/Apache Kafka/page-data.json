{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/Database Alternatives/Apache Kafka/",
    "result": {"data":{"mdx":{"id":"1a3df2c0-c128-5457-8338-3be6a7fb29c8","tableOfContents":{"items":[{"url":"#introduction","title":"INTRODUCTION"}]},"fields":{"title":"INTRODUCTION","slug":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/Database Alternatives/Apache Kafka/","url":"https://sense-docs.webizen.au/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/Database Alternatives/Apache Kafka/","editUrl":"https://github.com/WebizenAI/sense-docs/tree/main/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/Database Alternatives/Apache Kafka.md","lastUpdatedAt":"2023-02-09T21:54:39.000Z","lastUpdated":"2/9/2023","gitCreatedAt":"2023-02-09T21:54:39.000Z","shouldShowTitle":false},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Content Sourced from the  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kafka.apache.org/intro\"\n  }, \"Apache Kafka\"), \" Website (link also provided),\"), mdx(\"h1\", {\n    \"id\": \"introduction\"\n  }, \"INTRODUCTION\"), mdx(\"p\", null, \"Everything you need to know about Kafka in 10 minutes : \"), mdx(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/FKgi3n-FyNU\",\n    title: \"YouTube video player\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true\n  }), mdx(\"h4\", {\n    \"id\": \"apache-kafka-is-an-event-streaming-platform-what-does-that-mean\"\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"https://kafka.apache.org/intro#intro_platform\"\n  }, \"Apache Kafka\\xAE is an event streaming platform. What does that mean?\")), mdx(\"p\", null, \"Kafka combines three key capabilities so you can implement\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kafka.apache.org/powered-by\"\n  }, \"your use cases\"), \"\\xA0for event streaming end-to-end with a single battle-tested solution:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"To\\xA0\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"publish\"), \"\\xA0(write) and\\xA0\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"subscribe to\"), \"\\xA0(read) streams of events, including continuous import/export of your data from other systems.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"To\\xA0\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"store\"), \"\\xA0streams of events durably and reliably for as long as you want.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"To\\xA0\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"process\"), \"\\xA0streams of events as they occur or retrospectively.\")), mdx(\"p\", null, \"And all this functionality is provided in a distributed, highly scalable, elastic, fault-tolerant, and secure manner. Kafka can be deployed on bare-metal hardware, virtual machines, and containers, and on-premises as well as in the cloud. You can choose between self-managing your Kafka environments and using fully managed services offered by a variety of vendors.\"), mdx(\"h4\", {\n    \"id\": \"how-does-kafka-work-in-a-nutshell\"\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"https://kafka.apache.org/intro#intro_nutshell\"\n  }), mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"https://kafka.apache.org/intro#intro_nutshell\"\n  }, \"How does Kafka work in a nutshell?\")), mdx(\"p\", null, \"Kafka is a distributed system consisting of\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"servers\"), \"\\xA0and\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"clients\"), \"\\xA0that communicate via a high-performance\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kafka.apache.org/protocol.html\"\n  }, \"TCP network protocol\"), \". It can be deployed on bare-metal hardware, virtual machines, and containers in on-premise as well as cloud environments.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Servers\"), \": Kafka is run as a cluster of one or more servers that can span multiple datacenters or cloud regions. Some of these servers form the storage layer, called the brokers. Other servers run\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kafka.apache.org/documentation/#connect\"\n  }, \"Kafka Connect\"), \"\\xA0to continuously import and export data as event streams to integrate Kafka with your existing systems such as relational databases as well as other Kafka clusters. To let you implement mission-critical use cases, a Kafka cluster is highly scalable and fault-tolerant: if any of its servers fails, the other servers will take over their work to ensure continuous operations without any data loss.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Clients\"), \": They allow you to write distributed applications and microservices that read, write, and process streams of events in parallel, at scale, and in a fault-tolerant manner even in the case of network problems or machine failures. Kafka ships with some such clients included, which are augmented by\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://cwiki.apache.org/confluence/display/KAFKA/Clients\"\n  }, \"dozens of clients\"), \"\\xA0provided by the Kafka community: clients are available for Java and Scala including the higher-level\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kafka.apache.org/documentation/streams/\"\n  }, \"Kafka Streams\"), \"\\xA0library, for Go, Python, C/C++, and many other programming languages as well as REST APIs.\"), mdx(\"h4\", {\n    \"id\": \"what-is-event-streaming\"\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"https://kafka.apache.org/intro#intro_streaming\"\n  }, \"What is event streaming?\")), mdx(\"p\", null, \"Event streaming is the digital equivalent of the human body's central nervous system. It is the technological foundation for the 'always-on' world where businesses are increasingly software-defined and automated, and where the user of software is more software.\"), mdx(\"p\", null, \"Technically speaking, event streaming is the practice of capturing data in real-time from event sources like databases, sensors, mobile devices, cloud services, and software applications in the form of streams of events; storing these event streams durably for later retrieval; manipulating, processing, and reacting to the event streams in real-time as well as retrospectively; and routing the event streams to different destination technologies as needed. Event streaming thus ensures a continuous flow and interpretation of data so that the right information is at the right place, at the right time.\"), mdx(\"h4\", {\n    \"id\": \"what-can-i-use-event-streaming-for\"\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"https://kafka.apache.org/intro#intro_usage\"\n  }), mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"https://kafka.apache.org/intro#intro_usage\"\n  }, \"What can I use event streaming for?\")), mdx(\"p\", null, \"Event streaming is applied to a\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kafka.apache.org/powered-by\"\n  }, \"wide variety of use cases\"), \"\\xA0across a plethora of industries and organizations. Its many examples include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To process payments and financial transactions in real-time, such as in stock exchanges, banks, and insurances.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To track and monitor cars, trucks, fleets, and shipments in real-time, such as in logistics and the automotive industry.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To continuously capture and analyze sensor data from IoT devices or other equipment, such as in factories and wind parks.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To collect and immediately react to customer interactions and orders, such as in retail, the hotel and travel industry, and mobile applications.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To monitor patients in hospital care and predict changes in condition to ensure timely treatment in emergencies.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To connect, store, and make available data produced by different divisions of a company.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To serve as the foundation for data platforms, event-driven architectures, and microservices.\")), mdx(\"h4\", {\n    \"id\": \"main-concepts-and-terminology\"\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"https://kafka.apache.org/intro#intro_concepts_and_terms\"\n  }), mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"https://kafka.apache.org/intro#intro_concepts_and_terms\"\n  }, \"Main Concepts and Terminology\")), mdx(\"p\", null, \"An\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"event\"), \"\\xA0records the fact that \\\"something happened\\\" in the world or in your business. It is also called record or message in the documentation. When you read or write data to Kafka, you do this in the form of events. Conceptually, an event has a key, value, timestamp, and optional metadata headers. Here's an example event:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Event key: \\\"Alice\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Event value: \\\"Made a payment of $200 to Bob\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Event timestamp: \\\"Jun. 25, 2020 at 2:06 p.m.\\\"\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Producers\"), \"\\xA0are those client applications that publish (write) events to Kafka, and\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"consumers\"), \"\\xA0are those that subscribe to (read and process) these events. In Kafka, producers and consumers are fully decoupled and agnostic of each other, which is a key design element to achieve the high scalability that Kafka is known for. For example, producers never need to wait for consumers. Kafka provides various\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kafka.apache.org/documentation/#semantics\"\n  }, \"guarantees\"), \"\\xA0such as the ability to process events exactly-once.\"), mdx(\"p\", null, \"Events are organized and durably stored in\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"topics\"), \". Very simplified, a topic is similar to a folder in a filesystem, and the events are the files in that folder. An example topic name could be \\\"payments\\\". Topics in Kafka are always multi-producer and multi-subscriber: a topic can have zero, one, or many producers that write events to it, as well as zero, one, or many consumers that subscribe to these events. Events in a topic can be read as often as needed\\u2014unlike traditional messaging systems, events are not deleted after consumption. Instead, you define for how long Kafka should retain your events through a per-topic configuration setting, after which old events will be discarded. Kafka's performance is effectively constant with respect to data size, so storing data for a long time is perfectly fine.\"), mdx(\"p\", null, \"Topics are\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"partitioned\"), \", meaning a topic is spread over a number of \\\"buckets\\\" located on different Kafka brokers. This distributed placement of your data is very important for scalability because it allows client applications to both read and write the data from/to many brokers at the same time. When a new event is published to a topic, it is actually appended to one of the topic's partitions. Events with the same event key (e.g., a customer or vehicle ID) are written to the same partition, and Kafka\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kafka.apache.org/documentation/#semantics\"\n  }, \"guarantees\"), \"\\xA0that any consumer of a given topic-partition will always read that partition's events in exactly the same order as they were written.\"), mdx(\"img\", {\n    \"src\": \"https://kafka.apache.org/images/streams-and-tables-p1_p4.png\",\n    \"alt\": null\n  }), mdx(\"p\", null, \"Figure: This example topic has four partitions P1\\u2013P4. Two different producer clients are publishing, independently from each other, new events to the topic by writing events over the network to the topic's partitions. Events with the same key (denoted by their color in the figure) are written to the same partition. Note that both producers can write to the same partition if appropriate.\"), mdx(\"p\", null, \"To make your data fault-tolerant and highly-available, every topic can be\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"replicated\"), \", even across geo-regions or datacenters, so that there are always multiple brokers that have a copy of the data just in case things go wrong, you want to do maintenance on the brokers, and so on. A common production setting is a replication factor of 3, i.e., there will always be three copies of your data. This replication is performed at the level of topic-partitions.\"), mdx(\"p\", null, \"This primer should be sufficient for an introduction. The\\xA0\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kafka.apache.org/documentation/#design\"\n  }, \"Design\"), \"\\xA0section of the documentation explains Kafka's various concepts in full detail, if you are interested.\"), mdx(\"p\", null, \"Source: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://kafka.apache.org/intro\"\n  }, \"apache kafka\"), \" \"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"\nContent Sourced from the  [Apache Kafka](https://kafka.apache.org/intro) Website (link also provided),\n\n\n# INTRODUCTION\n\nEverything you need to know about Kafka in 10 minutes : \n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/FKgi3n-FyNU\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n#### [Apache Kafka® is an event streaming platform. What does that mean?](https://kafka.apache.org/intro#intro_platform)\nKafka combines three key capabilities so you can implement [your use cases](https://kafka.apache.org/powered-by) for event streaming end-to-end with a single battle-tested solution:\n\n1.  To **publish** (write) and **subscribe to** (read) streams of events, including continuous import/export of your data from other systems.\n2.  To **store** streams of events durably and reliably for as long as you want.\n3.  To **process** streams of events as they occur or retrospectively.\n\nAnd all this functionality is provided in a distributed, highly scalable, elastic, fault-tolerant, and secure manner. Kafka can be deployed on bare-metal hardware, virtual machines, and containers, and on-premises as well as in the cloud. You can choose between self-managing your Kafka environments and using fully managed services offered by a variety of vendors.\n\n#### [](https://kafka.apache.org/intro#intro_nutshell)[How does Kafka work in a nutshell?](https://kafka.apache.org/intro#intro_nutshell)\n\nKafka is a distributed system consisting of **servers** and **clients** that communicate via a high-performance [TCP network protocol](https://kafka.apache.org/protocol.html). It can be deployed on bare-metal hardware, virtual machines, and containers in on-premise as well as cloud environments.\n\n**Servers**: Kafka is run as a cluster of one or more servers that can span multiple datacenters or cloud regions. Some of these servers form the storage layer, called the brokers. Other servers run [Kafka Connect](https://kafka.apache.org/documentation/#connect) to continuously import and export data as event streams to integrate Kafka with your existing systems such as relational databases as well as other Kafka clusters. To let you implement mission-critical use cases, a Kafka cluster is highly scalable and fault-tolerant: if any of its servers fails, the other servers will take over their work to ensure continuous operations without any data loss.\n\n**Clients**: They allow you to write distributed applications and microservices that read, write, and process streams of events in parallel, at scale, and in a fault-tolerant manner even in the case of network problems or machine failures. Kafka ships with some such clients included, which are augmented by [dozens of clients](https://cwiki.apache.org/confluence/display/KAFKA/Clients) provided by the Kafka community: clients are available for Java and Scala including the higher-level [Kafka Streams](https://kafka.apache.org/documentation/streams/) library, for Go, Python, C/C++, and many other programming languages as well as REST APIs.\n\n#### [What is event streaming?](https://kafka.apache.org/intro#intro_streaming)\n\nEvent streaming is the digital equivalent of the human body's central nervous system. It is the technological foundation for the 'always-on' world where businesses are increasingly software-defined and automated, and where the user of software is more software.\n\nTechnically speaking, event streaming is the practice of capturing data in real-time from event sources like databases, sensors, mobile devices, cloud services, and software applications in the form of streams of events; storing these event streams durably for later retrieval; manipulating, processing, and reacting to the event streams in real-time as well as retrospectively; and routing the event streams to different destination technologies as needed. Event streaming thus ensures a continuous flow and interpretation of data so that the right information is at the right place, at the right time.\n\n#### [](https://kafka.apache.org/intro#intro_usage)[What can I use event streaming for?](https://kafka.apache.org/intro#intro_usage)\n\nEvent streaming is applied to a [wide variety of use cases](https://kafka.apache.org/powered-by) across a plethora of industries and organizations. Its many examples include:\n\n-   To process payments and financial transactions in real-time, such as in stock exchanges, banks, and insurances.\n-   To track and monitor cars, trucks, fleets, and shipments in real-time, such as in logistics and the automotive industry.\n-   To continuously capture and analyze sensor data from IoT devices or other equipment, such as in factories and wind parks.\n-   To collect and immediately react to customer interactions and orders, such as in retail, the hotel and travel industry, and mobile applications.\n-   To monitor patients in hospital care and predict changes in condition to ensure timely treatment in emergencies.\n-   To connect, store, and make available data produced by different divisions of a company.\n-   To serve as the foundation for data platforms, event-driven architectures, and microservices.\n\n\n#### [](https://kafka.apache.org/intro#intro_concepts_and_terms)[Main Concepts and Terminology](https://kafka.apache.org/intro#intro_concepts_and_terms)\n\nAn **event** records the fact that \"something happened\" in the world or in your business. It is also called record or message in the documentation. When you read or write data to Kafka, you do this in the form of events. Conceptually, an event has a key, value, timestamp, and optional metadata headers. Here's an example event:\n\n-   Event key: \"Alice\"\n-   Event value: \"Made a payment of $200 to Bob\"\n-   Event timestamp: \"Jun. 25, 2020 at 2:06 p.m.\"\n\n**Producers** are those client applications that publish (write) events to Kafka, and **consumers** are those that subscribe to (read and process) these events. In Kafka, producers and consumers are fully decoupled and agnostic of each other, which is a key design element to achieve the high scalability that Kafka is known for. For example, producers never need to wait for consumers. Kafka provides various [guarantees](https://kafka.apache.org/documentation/#semantics) such as the ability to process events exactly-once.\n\nEvents are organized and durably stored in **topics**. Very simplified, a topic is similar to a folder in a filesystem, and the events are the files in that folder. An example topic name could be \"payments\". Topics in Kafka are always multi-producer and multi-subscriber: a topic can have zero, one, or many producers that write events to it, as well as zero, one, or many consumers that subscribe to these events. Events in a topic can be read as often as needed—unlike traditional messaging systems, events are not deleted after consumption. Instead, you define for how long Kafka should retain your events through a per-topic configuration setting, after which old events will be discarded. Kafka's performance is effectively constant with respect to data size, so storing data for a long time is perfectly fine.\n\nTopics are **partitioned**, meaning a topic is spread over a number of \"buckets\" located on different Kafka brokers. This distributed placement of your data is very important for scalability because it allows client applications to both read and write the data from/to many brokers at the same time. When a new event is published to a topic, it is actually appended to one of the topic's partitions. Events with the same event key (e.g., a customer or vehicle ID) are written to the same partition, and Kafka [guarantees](https://kafka.apache.org/documentation/#semantics) that any consumer of a given topic-partition will always read that partition's events in exactly the same order as they were written.\n\n![](https://kafka.apache.org/images/streams-and-tables-p1_p4.png)\n\nFigure: This example topic has four partitions P1–P4. Two different producer clients are publishing, independently from each other, new events to the topic by writing events over the network to the topic's partitions. Events with the same key (denoted by their color in the figure) are written to the same partition. Note that both producers can write to the same partition if appropriate.\n\nTo make your data fault-tolerant and highly-available, every topic can be **replicated**, even across geo-regions or datacenters, so that there are always multiple brokers that have a copy of the data just in case things go wrong, you want to do maintenance on the brokers, and so on. A common production setting is a replication factor of 3, i.e., there will always be three copies of your data. This replication is performed at the level of topic-partitions.\n\nThis primer should be sufficient for an introduction. The [Design](https://kafka.apache.org/documentation/#design) section of the documentation explains Kafka's various concepts in full detail, if you are interested.\n \nSource: [apache kafka](https://kafka.apache.org/intro) ","excerpt":"Content Sourced from the   Apache Kafka  Website (link also provided), INTRODUCTION Everything you need to know about Kafka in 10 minutes :…","outboundReferences":[],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/Database Alternatives/Apache Kafka/","sidebarItems":[{"title":"Categories","items":[{"title":"Introductory Notes","url":"/IntroductoryNotes/","items":[{"title":"ChatGPT","url":"","items":[{"title":"A ChatGPT Experiment: Holborn","url":"/IntroductoryNotes/ChatGPT/AChatGPTExperimentHolborn/","items":[]},{"title":"ChatGPT-DynamicOntology","url":"/IntroductoryNotes/ChatGPT/ChatGPT-DynamicOntology/","items":[]}]},{"title":"English Language Modelling","url":"/IntroductoryNotes/PCT-EnglishLanguageModelling/","items":[]},{"title":"Functional Designs","url":"/IntroductoryNotes/FunctionalDesigns/","items":[{"title":"DatabaseDesigns","url":"/IntroductoryNotes/FunctionalDesigns/DatabaseDesigns/","items":[]},{"title":"Decentralisation","url":"/IntroductoryNotes/FunctionalDesigns/decentralisation/","items":[]},{"title":"Interfaces","url":"/IntroductoryNotes/FunctionalDesigns/Interfaces/","items":[]},{"title":"Logic Modelling","url":"/IntroductoryNotes/FunctionalDesigns/LogicModelling/","items":[]},{"title":"MediaProcessing","url":"/IntroductoryNotes/FunctionalDesigns/MediaProcessing/","items":[]},{"title":"MultiMedia Queries","url":"/IntroductoryNotes/FunctionalDesigns/MultiMediaQueries/","items":[]},{"title":"MultiModal","url":"/IntroductoryNotes/FunctionalDesigns/MultiModal/","items":[]},{"title":"OpenCV","url":"/IntroductoryNotes/FunctionalDesigns/OpenCV/","items":[{"title":"Optical Character Recognition","url":"/IntroductoryNotes/FunctionalDesigns/OpenCV/OCR/","items":[]}]}]},{"title":"Language Models","url":"/IntroductoryNotes/LanguageModels/","items":[{"title":"Alphabets","url":"/IntroductoryNotes/LanguageModels/Alphabets/","items":[{"title":"ArabicAlphabet","url":"/IntroductoryNotes/LanguageModels/Alphabets/ArabicAlphabet/","items":[]},{"title":"Danish orthography","url":"/IntroductoryNotes/LanguageModels/Alphabets/DanishOrthography/","items":[]},{"title":"EnglishAlphabet","url":"/IntroductoryNotes/LanguageModels/Alphabets/EnglishAlphabet/","items":[]},{"title":"GermanOrthography","url":"/IntroductoryNotes/LanguageModels/Alphabets/GermanOrthography/","items":[]},{"title":"GreekAlphabet","url":"/IntroductoryNotes/LanguageModels/Alphabets/GreekAlphabet/","items":[]},{"title":"HebrewAlphabet","url":"/IntroductoryNotes/LanguageModels/Alphabets/HebrewAlphabet/","items":[]},{"title":"International Phonetic Alphabet","url":"/IntroductoryNotes/LanguageModels/Alphabets/IPA/","items":[]},{"title":"LatinAlphabet","url":"/IntroductoryNotes/LanguageModels/Alphabets/LatinAlphabet/","items":[]},{"title":"MedievalLatin","url":"/IntroductoryNotes/LanguageModels/Alphabets/MedievalLatin/","items":[]},{"title":"NorwegianOrthography","url":"/IntroductoryNotes/LanguageModels/Alphabets/NorwegianOrthography/","items":[]}]},{"title":"English","url":"/IntroductoryNotes/LanguageModels/English/","items":[]},{"title":"French","url":"/IntroductoryNotes/LanguageModels/French/","items":[]},{"title":"German","url":"/IntroductoryNotes/LanguageModels/German/","items":[]},{"title":"Heraldry","url":"/IntroductoryNotes/LanguageModels/Heraldry/","items":[]},{"title":"Indigenous Languages","url":"/IntroductoryNotes/LanguageModels/IndigenousLanguages/","items":[]},{"title":"LargeLanguageModels","url":"/IntroductoryNotes/LanguageModels/LargeLanguageModels/","items":[{"title":"Babelnet","url":"/IntroductoryNotes/LanguageModels/LargeLanguageModels/Babelnet/","items":[]},{"title":"Cyc","url":"/IntroductoryNotes/LanguageModels/LargeLanguageModels/cyc/","items":[]},{"title":"FrameNet","url":"/IntroductoryNotes/LanguageModels/LargeLanguageModels/FrameNet/","items":[]},{"title":"Framester","url":"/IntroductoryNotes/LanguageModels/LargeLanguageModels/Framester/","items":[]},{"title":"Lemon","url":"/IntroductoryNotes/LanguageModels/LargeLanguageModels/Lemon/","items":[]},{"title":"Linguist List","url":"/IntroductoryNotes/LanguageModels/LargeLanguageModels/linguistlist/","items":[]},{"title":"Suggested Upper Merged Ontology (SUMO)","url":"/IntroductoryNotes/LanguageModels/LargeLanguageModels/SUMO/","items":[]},{"title":"WordNet","url":"/IntroductoryNotes/LanguageModels/LargeLanguageModels/WordNet/","items":[]}]},{"title":"Linguistic Data Consortium","url":"/IntroductoryNotes/LanguageModels/LDC/","items":[]},{"title":"Mathematics","url":"/IntroductoryNotes/LanguageModels/Mathematics/","items":[]},{"title":"Ontology App Development","url":"/IntroductoryNotes/LanguageModels/OntologyAppDev/","items":[]},{"title":"StemLanguageModels","url":"/IntroductoryNotes/LanguageModels/StemLanguageModels/","items":[{"title":"Ancient Greek","url":"/IntroductoryNotes/LanguageModels/StemLanguageModels/AncientGreek/","items":[]},{"title":"British Latin","url":"/IntroductoryNotes/LanguageModels/StemLanguageModels/BritishLatin/","items":[]},{"title":"Celtic Languages","url":"/IntroductoryNotes/LanguageModels/StemLanguageModels/Celtic/","items":[]},{"title":"Latin","url":"/IntroductoryNotes/LanguageModels/StemLanguageModels/Latin/","items":[]},{"title":"Old Norse","url":"/IntroductoryNotes/LanguageModels/StemLanguageModels/OldNorse/","items":[]}]},{"title":"The General Mission.","url":"/IntroductoryNotes/LanguageModels/GeneralSummary/","items":[]},{"title":"WordsAPI","url":"/IntroductoryNotes/LanguageModels/WordsAPI/","items":[]}]},{"title":"Technologies","url":"","items":[{"title":"Background Re: Tools","url":"/IntroductoryNotes/Technologies/BackgroundToolsInfo/","items":[]}]},{"title":"Vocabulary Modelling","url":"/IntroductoryNotes/VocabularyModelling/","items":[{"title":"Epistemology","url":"/IntroductoryNotes/VocabularyModelling/Epistemology/","items":[]},{"title":"Etymology","url":"/IntroductoryNotes/VocabularyModelling/Etymology/","items":[]},{"title":"Semantics","url":"/IntroductoryNotes/VocabularyModelling/Semantics/","items":[]},{"title":"Semiotics","url":"/IntroductoryNotes/VocabularyModelling/Semiotics/","items":[]}]}]},{"title":"PCT-Webizen-Notes","url":"/PCT-Webizen-Notes/","items":[{"title":"EngineeringConsiderations","url":"","items":[{"title":"Cryptographic Signatures","url":"/PCT-Webizen-Notes/EngineeringConsiderations/CryptographicSignatures/","items":[]},{"title":"DNSConsiderations","url":"/PCT-Webizen-Notes/EngineeringConsiderations/DNSConsiderations/","items":[]},{"title":"Energy Consumption","url":"/PCT-Webizen-Notes/EngineeringConsiderations/EnergyConsumption/","items":[]},{"title":"ForTheGoodOfHumanity","url":"/PCT-Webizen-Notes/EngineeringConsiderations/ForTheGoodOfHumanity/","items":[]},{"title":"PublishingWorkflow","url":"/PCT-Webizen-Notes/EngineeringConsiderations/PublishingWorkflow/","items":[]},{"title":"SocioEconomic Relations","url":"/PCT-Webizen-Notes/EngineeringConsiderations/SocioEconomicRelations/","items":[]},{"title":"Temporal Semantics","url":"/PCT-Webizen-Notes/EngineeringConsiderations/TemporalSemantics/","items":[]},{"title":"Version Control","url":"/PCT-Webizen-Notes/EngineeringConsiderations/VersionControl/","items":[]}]},{"title":"Peace Infrastructure Project","url":"/PCT-Webizen-Notes/PeaceInfrastructureProject/","items":[]},{"title":"Permissive Commons Tech","url":"/PCT-Webizen-Notes/PermissiveCommonsTech/","items":[]},{"title":"Problem Statement","url":"/PCT-Webizen-Notes/PCTProblemStatement/","items":[]},{"title":"Webizen","url":"/PCT-Webizen-Notes/Webizen/","items":[{"title":"Guardianship Relations","url":"/PCT-Webizen-Notes/Webizen/GuardianshipRelations/","items":[]},{"title":"HostServiceRequirements","url":"","items":[{"title":"Authentication Fabric","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/Authentication Fabric/","items":[]},{"title":"Database Requirements","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/","items":[{"title":"Database Alternatives","url":"","items":[{"title":"Akutan","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/Database Alternatives/akutan/","items":[]},{"title":"Bad Wolf","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/Database Alternatives/BadWolf/","items":[]},{"title":"CayleyGraph","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/Database Alternatives/CayleyGraph/","items":[]},{"title":"INTRODUCTION","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/Database Alternatives/Apache Kafka/","items":[]}]},{"title":"Database Methods","url":"","items":[{"title":"BadWolf Query Language","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/Database methods/BQL/","items":[]},{"title":"GraphQL","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/Database methods/GraphQL/","items":[]},{"title":"Sparql","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DatabaseRequirements/Database methods/Sparql/","items":[]}]}]},{"title":"Domain Hosting","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/DomainHosting/","items":[]},{"title":"Email Services","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/EmailServices/","items":[]},{"title":"Media Processing","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/MediaProcessing/","items":[{"title":"Ffmpeg","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/MediaProcessing/ffmpeg/","items":[]},{"title":"Opencv","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/MediaProcessing/opencv/","items":[]}]},{"title":"Networking Considerations","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/NetworkingConsiderations/","items":[]},{"title":"Website Host","url":"/PCT-Webizen-Notes/Webizen/HostServiceRequirements/WebsiteHost/","items":[]}]},{"title":"HyperMedia Containers","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/","items":[{"title":"Knowledge Documents","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/KnowledgeDocuments/","items":[]},{"title":"Webizen 3.0 apps","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/","items":[{"title":"CoreApps","url":"","items":[{"title":"Agent Directory","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/CoreApps/AgentDirectory/","items":[]},{"title":"Credentials & Contracts Manager","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/CoreApps/Credentials&ContractsManager/","items":[]},{"title":"File (package) Manager","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/CoreApps/File(package)Manager/","items":[]},{"title":"HyperMedia Library","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/CoreApps/HyperMediaLibrary/","items":[]},{"title":"Temporal Apps","url":"","items":[{"title":"Calendar","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/CoreApps/Temporal Apps/Calendar/","items":[]},{"title":"Timeline Interface","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/CoreApps/Temporal Apps/TimelineInterface/","items":[]}]},{"title":"Webizen Apps (v1)","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/CoreApps/WebizenApps(v1)/","items":[]},{"title":"Webizen Manager","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/CoreApps/Webizen Manager/","items":[]}]},{"title":"Design Goals","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/DesignGoals/","items":[]},{"title":"Webizen-Connect","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/Webizen-Connect/","items":[{"title":"Data Applications","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/Webizen-Connect/DataApplications/","items":[]},{"title":"Social Media APIs","url":"/PCT-Webizen-Notes/Webizen/HyperMediaContainers/Webizen3.0Apps/Webizen-Connect/SocialMediaAPIs/","items":[]}]}]}]},{"title":"PCT-Webizen Tech Stack","url":"/PCT-Webizen-Notes/Webizen/PCT-WebizenTechStack/","items":[]}]},{"title":"WorkInProgress","url":"","items":[{"title":"Cognitive AI","url":"/PCT-Webizen-Notes/WorkInProgress/CognitiveAI/","items":[{"title":"Decentralised Ontologies","url":"/PCT-Webizen-Notes/WorkInProgress/CognitiveAI/DecentralisedOntologies/","items":[]},{"title":"Defeasible Logic","url":"/PCT-Webizen-Notes/WorkInProgress/CognitiveAI/DefeasibleLogic/","items":[]},{"title":"Human Centric Ontology","url":"/PCT-Webizen-Notes/WorkInProgress/CognitiveAI/HumanCentricOntology/","items":[]},{"title":"PCT Ontology Modelling","url":"/PCT-Webizen-Notes/WorkInProgress/CognitiveAI/PCTOntologyModelling/","items":[]},{"title":"Plausible Reasoning","url":"/PCT-Webizen-Notes/WorkInProgress/CognitiveAI/PlausibleReasoning/","items":[]}]},{"title":"Collect Existing Ontologies","url":"/PCT-Webizen-Notes/WorkInProgress/CollectExistingOntologies/","items":[]},{"title":"Minimum Wages","url":"/PCT-Webizen-Notes/WorkInProgress/MinimumWages/","items":[]},{"title":"Ontology in Markdown Example","url":"/PCT-Webizen-Notes/WorkInProgress/RDF2MD-Example/","items":[]},{"title":"Permissive Commons Technology (PCT) Requirements.","url":"/PCT-Webizen-Notes/WorkInProgress/PermissiveCommonsRequirements/","items":[]},{"title":"Safety Considerations","url":"/PCT-Webizen-Notes/WorkInProgress/SafetyConsiderations/","items":[]}]}]},{"title":"Sense Docs","url":"/","items":[]},{"title":"Sense-Tech","url":"","items":[{"title":"Ontologies","url":"","items":[{"title":"DublinCore","url":"/sense-tech/Ontologies/DublinCore/","items":[]},{"title":"GeoSpatial","url":"/sense-tech/Ontologies/GIS/","items":[]},{"title":"Ontology Design Patterns","url":"/sense-tech/Ontologies/ODP/","items":[]},{"title":"Temporal","url":"/sense-tech/Ontologies/Temporal/","items":[]}]},{"title":"Requirements","url":"/sense-tech/Requirements/","items":[]}]},{"title":"Web Science","url":"/WebScience/","items":[{"title":"About","url":"/WebScience/About/","items":[{"title":"Understanding Ontologies","url":"/WebScience/About/UnderstandingOntologies/","items":[]},{"title":"What are 'The Commons'","url":"/WebScience/About/WhatAreTheCommons/","items":[]},{"title":"What is 'Open Data'","url":"/WebScience/About/WhatIsOpenData/","items":[]},{"title":"What is Web-Science","url":"/WebScience/About/WhatIsWebScience/","items":[]}]},{"title":"Economic Systems","url":"/WebScience/EconomicSystems/","items":[{"title":"Currencies","url":"/WebScience/EconomicSystems/Currencies/","items":[{"title":"Financial Payment Types","url":"/WebScience/EconomicSystems/Currencies/FinancialPaymentTypes/","items":[]},{"title":"Gifts and Donations","url":"/WebScience/EconomicSystems/Currencies/GiftsAndDonations/","items":[]},{"title":"Micropayments","url":"/WebScience/EconomicSystems/Currencies/Micropayments/","items":[]},{"title":"Non-Financial Currencies","url":"/WebScience/EconomicSystems/Currencies/Non-FinancialCurrencies/","items":[]}]},{"title":"The Work Project","url":"/WebScience/EconomicSystems/WorkProject/","items":[{"title":"Contribution Classifications","url":"/WebScience/EconomicSystems/WorkProject/ContributionClassifications/","items":[]},{"title":"Equipment and Supplies","url":"/WebScience/EconomicSystems/WorkProject/EquipmentAndSupplies/","items":[]},{"title":"Intellectual Property","url":"/WebScience/EconomicSystems/WorkProject/IntellectualProperty/","items":[]},{"title":"Knowledge Work","url":"/WebScience/EconomicSystems/WorkProject/KnowledgeWork/","items":[]},{"title":"Labour Work","url":"/WebScience/EconomicSystems/WorkProject/LabourWork/","items":[]},{"title":"Licensing Frameworks","url":"/WebScience/EconomicSystems/WorkProject/LicensingFrameworks/","items":[]},{"title":"Project Financing","url":"/WebScience/EconomicSystems/WorkProject/ProjectFinancing/","items":[]},{"title":"Resources","url":"/WebScience/EconomicSystems/WorkProject/Resources/","items":[]},{"title":"Work Valuation Methods","url":"/WebScience/EconomicSystems/WorkProject/WorkValuationMethods/","items":[]}]},{"title":"Webizen Alliance","url":"/WebScience/EconomicSystems/WebizenAlliance/","items":[{"title":"Community of Practice","url":"/WebScience/EconomicSystems/WebizenAlliance/CommunityOfPractice/","items":[]},{"title":"The Webizen Charter","url":"/WebScience/EconomicSystems/WebizenAlliance/TheWebizenCharter/","items":[]}]}]},{"title":"Human-Centric AI Ethics","url":"/WebScience/HumanCentricAI/","items":[{"title":"Learning Modals","url":"/WebScience/HumanCentricAI/LearningModals/","items":[]},{"title":"Personal Ontology","url":"/WebScience/HumanCentricAI/PersonalOntology/","items":[]},{"title":"Science of Consciousness","url":"/WebScience/HumanCentricAI/ScienceOfConsciousness/","items":[]},{"title":"The Values Project","url":"/WebScience/HumanCentricAI/ValuesProject/","items":[{"title":"Values Credentials","url":"/WebScience/HumanCentricAI/ValuesProject/ValuesCredentials/","items":[]}]}]},{"title":"Information Theory","url":"/WebScience/InformationTheory/","items":[{"title":"Category Theory","url":"/WebScience/InformationTheory/AppliedCategoryTheory/","items":[]},{"title":"Centricity","url":"/WebScience/InformationTheory/Centricity/","items":[]},{"title":"Data Vs. Quads","url":"/WebScience/InformationTheory/DataVsQuads/","items":[]},{"title":"Nomenclature","url":"/WebScience/InformationTheory/Nomenclature/","items":[]},{"title":"TopLevelOntologyNLPResearch","url":"/WebScience/InformationTheory/TopLevelOntologyNLPResearch/","items":[]}]},{"title":"PeaceInfrastructureProject","url":"","items":[{"title":"About the Peace Infrastructure Project","url":"/WebScience/PeaceInfrastructureProject/AboutThePeaceInfrastructureProject/","items":[]},{"title":"Biosphere Ontologies","url":"/WebScience/PeaceInfrastructureProject/BiosphereOntologies/","items":[]},{"title":"Environmental, Social and Governance (ESG)","url":"/WebScience/PeaceInfrastructureProject/ESG/","items":[{"title":"Biosphere Calcs","url":"/WebScience/PeaceInfrastructureProject/ESG/BiosphereCalcs/","items":[]},{"title":"Energy Calcs","url":"/WebScience/PeaceInfrastructureProject/ESG/EnergyCalcs/","items":[]},{"title":"SocioSphere Calcs","url":"/WebScience/PeaceInfrastructureProject/ESG/SocioSphereCalcs/","items":[]}]},{"title":"Safety Protocols","url":"/WebScience/PeaceInfrastructureProject/SafetyProtocols/","items":[{"title":"Data Portability","url":"/WebScience/PeaceInfrastructureProject/SafetyProtocols/DataPortability/","items":[]},{"title":"Ending Digital Slavery","url":"/WebScience/PeaceInfrastructureProject/SafetyProtocols/EndingDigitalSlavery/","items":[]},{"title":"Fair Work Protocols","url":"/WebScience/PeaceInfrastructureProject/SafetyProtocols/FairWorkProtocols/","items":[]},{"title":"Freedom of Thought","url":"/WebScience/PeaceInfrastructureProject/SafetyProtocols/FreedomofThought/","items":[]},{"title":"Human Centric AI","url":"/WebScience/PeaceInfrastructureProject/SafetyProtocols/HumanCentricAI/","items":[]},{"title":"HumanCentric Digital Identity","url":"/WebScience/PeaceInfrastructureProject/SafetyProtocols/HumanCentricDigitalIdentity/","items":[]},{"title":"No Lock-ins","url":"/WebScience/PeaceInfrastructureProject/SafetyProtocols/NoLock-ins/","items":[]},{"title":"Relationships (Social)","url":"/WebScience/PeaceInfrastructureProject/SafetyProtocols/Relationships(Social)/","items":[]}]},{"title":"Social Attack Vectors","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/","items":[{"title":"Attacks Online","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/AttacksOnline/","items":[]},{"title":"Commercial Exploitation","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/CommercialExploitation/","items":[]},{"title":"Criminal Activity","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/CriminalActivity/","items":[{"title":"Corporate Crime","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/CriminalActivity/CorporateCrime/","items":[]},{"title":"Digital Slavery","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/CriminalActivity/DigitalSlavery/","items":[]},{"title":"Environmental Crime","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/CriminalActivity/EnvironmentalCrime/","items":[]},{"title":"Financial Crimes","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/CriminalActivity/FinancialCrimes/","items":[]},{"title":"Fraud","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/CriminalActivity/Fraud/","items":[]},{"title":"Proxy Attacks","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/CriminalActivity/ProxyAttacks/","items":[]}]},{"title":"Cyber Attack Vectors","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/CyberAttackVectors/","items":[{"title":"Cyber Crime","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/CyberAttackVectors/CyberCrime/","items":[]},{"title":"NobodyAI","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/CyberAttackVectors/NobodyAI/","items":[]},{"title":"Tech Debt","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/CyberAttackVectors/TechDebt/","items":[]}]},{"title":"Dehumanisation","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/Dehumanisation/","items":[]},{"title":"Dishonesty","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/Dishonesty/","items":[]},{"title":"Fake News","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/FakeNews/","items":[]},{"title":"Public Sector Wrong Doings","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/PublicSectorWrongDoings/","items":[]},{"title":"Temporal Attacks","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/TemporalAttacks/","items":[]},{"title":"Torts","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/Torts/","items":[{"title":"Economic Torts","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/Torts/EconomicTorts/","items":[]},{"title":"Intentional Torts","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/Torts/IntentionalTorts/","items":[]},{"title":"Negligence","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/Torts/Negligence/","items":[]},{"title":"Nuisance","url":"/WebScience/PeaceInfrastructureProject/SocialAttackVectors/Torts/Nuisance/","items":[]}]}]},{"title":"SocioSphere Ontologies","url":"/WebScience/PeaceInfrastructureProject/SocioSphereOntologies/","items":[]},{"title":"Sustainable Development Goals (ESG)","url":"/WebScience/PeaceInfrastructureProject/SustainableDevelopmentGoals(ESG)/","items":[]}]},{"title":"SocialOntology","url":"","items":[{"title":"Best Efforts","url":"/WebScience/SocialOntology/BestEfforts/","items":[]},{"title":"Fit For Purpose","url":"/WebScience/SocialOntology/FitForPurpose/","items":[]},{"title":"Learning Modals","url":"/WebScience/SocialOntology/LearningModals/","items":[]}]}]}]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/IntroductoryNotes/LanguageModels/French/","title":"French","lastUpdatedAt":"2023-02-09T21:54:39.000Z","lastUpdated":"2/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/sense-tech/Ontologies/DublinCore/","title":"DublinCore","lastUpdatedAt":"2023-02-09T21:54:39.000Z","lastUpdated":"2/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/IntroductoryNotes/","title":"Introductory Notes","lastUpdatedAt":"2023-02-09T21:54:39.000Z","lastUpdated":"2/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/PCT-Webizen-Notes/","title":"PCT-Webizen-Notes","lastUpdatedAt":"2023-02-09T21:54:39.000Z","lastUpdated":"2/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/","title":"Sense Docs","lastUpdatedAt":"2023-02-09T21:54:39.000Z","lastUpdated":"2/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/WebScience/","title":"Web Science","lastUpdatedAt":"2023-02-09T21:54:39.000Z","lastUpdated":"2/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/IntroductoryNotes/FunctionalDesigns/","title":"Functional Designs","lastUpdatedAt":"2023-02-09T21:54:39.000Z","lastUpdated":"2/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/IntroductoryNotes/LanguageModels/","title":"Language Models","lastUpdatedAt":"2023-02-09T21:54:39.000Z","lastUpdated":"2/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/IntroductoryNotes/PCT-EnglishLanguageModelling/","title":"English Language Modelling","lastUpdatedAt":"2023-02-09T21:54:39.000Z","lastUpdated":"2/9/2023"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/IntroductoryNotes/VocabularyModelling/","title":"Vocabulary Modelling","lastUpdatedAt":"2023-02-09T21:54:39.000Z","lastUpdated":"2/9/2023"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}